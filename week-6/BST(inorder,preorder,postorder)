#include<stdio.h>
#include<stdlib.h>
struct node
{
       int data;
       struct node*left;
       struct node*right;
};
struct node *root =NULL,*cur,*temp;
struct node *create(){
      printf("enter the no:");
      cur =(struct node*)malloc(sizeof(struct node));
      scanf("%d",&(cur->data));
      cur->left =NULL;
      cur->right =NULL;
      if(root == NULL)
         root =cur;
  	  else
{
          temp =root;
      while(temp != NULL)
{
            if(cur->data < temp->data && temp->left == NULL){
                temp->left =cur;
                return root;
            }
            else if(cur->data < temp->data && temp->left != NULL){
                     temp =temp->left;
            }
            else if(cur->data > temp->data && temp->right == NULL){
                    temp->right =cur;
                    return root;
            }
            else if(cur->data > temp->data && temp->right != NULL){
                   temp =temp->right;
            
} 
}
}
}
void preorder(struct node *root){
          if (root != NULL){
                printf("%d\n",root->data);
                preorder(root->left);
                preorder(root->right);
          }
}
void inorder(struct node *root){
      if(root != NULL){
            inorder(root->left);
            printf("%d\n",root->data);
            inorder(root->right);
      }
}
void postorder(struct node *root){
     if (root != NULL){
          postorder(root->left);
          postorder(root->right);
          printf("%d\n",root->data);
     }
}
int main(){
    int ch;
    while(1){
           printf("\n1-create\n2-preorder\n3-inorder\n4-postorder\n5-exit\n");
           printf("enter ur choice:");
           scanf("%d",&ch);
           switch(ch){
                case 1:
                       root =create();
                       break;
                case 2:
                       preorder(root);
                       break;
                case 3:
                       inorder(root);
                       break;
                case 4:
                       postorder(root);
                       break;
                case 5:
                       exit(0);
           }
     }
}
output:
-create
2-preorder
3-inorder
4-postorder
5-exit
enter ur choice:1
enter the no:78 

1-create
2-preorder
3-inorder
4-postorder
5-exit
enter ur choice:1
enter the no:32

1-create
2-preorder
3-inorder
4-postorder
5-exit
enter ur choice:1
enter the no:28

1-create
2-preorder
3-inorder
4-postorder
5-exit
enter ur choice:1
enter the no:60

1-create
2-preorder
3-inorder
4-postorder
5-exit
enter ur choice:1
enter the no:46

1-create
2-preorder
3-inorder
4-postorder
5-exit
enter ur choice:2
78
32
28
60
46

1-create
2-preorder
3-inorder
4-postorder
5-exit
enter ur choice:3
28
32
46
60
78

1-create
2-preorder
3-inorder
4-postorder
5-exit
enter ur choice:4
28
46
60
32
78

1-create
2-preorder
3-inorder
4-postorder
5-exit
enter ur choice:5
cse@cselab:
